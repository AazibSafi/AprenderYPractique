___ 1st Coding Round ___
Exact Question: https://leetcode.com/discuss/interview-question/340230/google-onsite-implement-logger

We want to design a logger that writes session information to an append-only log file (i.e., you can only append to the file). The logger supports two types of requests made via the following methods:

start_session(start_timestamp, session_id): this method is called to inform the logger about the starting of a new session. The caller provides as argument the ID associated with the session, session_id, (you may assume that session IDs are either string or integer values; either choice is fine), and the timestamp representing the time when the session started (you may assume that the timestamp is some non-negative integer value representing time, generated by some simple counter/clock).
end_session(end_timestamp, session_id): this method is called to inform the logger that the session associated with session_id has ended. The argument end_timestamp is the time when the session ended.

We may assume the following:
the requests are made in a sequential order, i.e. there are no concurrent requests made to the logger,
the timestamp argument of the (n+1)th request (could be either a start_session or an end_session request) is strictly greater the timestamp argument of the nth request, and
the logger only receives valid requests, i.e., each start_session request contains a unique session_id, and an end_session request contains the session_id of an active session.


start_session(3, 12345)
start_session(123, 88999)
end_session(200, 12345)
start_session(212, 77677)
end_session(1089, 77677)
end_session(1100, 88999)

Log {session id, start timestamp, duration}
    12345 3 197
    77677 212 877
    88999 123 977

Followup question: would you remove the old entries?